{"mappings":"imBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,CAAC,EAoBfF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,GAElC,EAaAL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,CACT,C,ICpBAE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,+I,SCAzDC,EAAiB,IAAAC,IAAoBL,EAAA,SAAAM,QAA6C,SAAAC,OAAAC,KAAAC,KAAUC,W,SCArF,SAASC,IAId,OAH6BT,KAAKC,MAAMS,aAAaC,QAAQ,cAEtBC,QAAOC,IAAwB,IAAhBA,EAAKC,SAExDC,KACC,EACED,OAAEA,EAAME,IAAEA,EAAGC,MAAEA,EAAKC,KAAEA,EAAIC,KAAEA,EAAIC,SAAEA,EAAQC,aAAEA,EAAYC,WAAEA,GAC1DC,KAEA,MAAMC,EAAeF,EACjB,uBACA,kBAEJ,IAAIG,EAAW,GAYf,OAVEA,EADEH,EACF,IAAAnB,IAAAD,GAKA,IAAAC,IAAAuB,GAKK,4JAGqBF,sCACFC,SAAgBD,0FAGTJ,kDACFJ,qIAGHC,2CACFC,4FAEKC,yDACOE,gHAI/B,IAGVM,KAAK,GACV,CCjDO,SAASC,EAAUC,EAAMC,GAC9BD,EAAKE,UAAYD,CACnB,CCFAJ,EAAiB,IAAAvB,IAAoBL,EAAA,SAAAM,QAA6C,SAAAC,OAAAC,KAAAC,KAAUC,WCA5F,MAAMwB,EAAoBC,SAASC,cAAc,oBCA1C,WACL,IAAIC,EAAQF,SAASG,iBAAiB,iBAClCC,EAASJ,SAASC,cAAc,QAAQvC,GAE5C,IAAK,IAAI2C,KAAQH,EACXG,EAAKC,QAAQC,QAAUH,GACzBC,EAAKG,UAAUC,IAAI,UAazB,CDdA,GAEAd,EAAUI,EAAmBvB,KAE7BuB,EAAkBW,iBAAiB,SAASC,IAC1C,GAAIA,EAAMC,OAAOJ,UAAUK,SAAS,aAAc,CAChD,MACMC,EADOH,EAAMC,OAAOG,WAAWA,WACdd,cAAc,gBAAgBe,YAErD,IAAIC,EAAmBlD,KAAKC,MAAMS,aAAaC,QAAQ,cAEvD,MAAMwC,EAAsBD,EAAiBE,WAC3CC,GAAQA,EAAKpC,QAAU8B,KAGgC,IAArDG,EAAiBC,GAAqB7B,WACxC4B,EAAiBC,GAAqB7B,YAAa,EAEnD4B,EAAiBC,GAAqB7B,YAAa,EAGrDZ,aAAa4C,QAAQ,YAAatD,KAAKuD,UAAUL,IAEjDtB,EAAUI,EAAmBvB,IAC/B","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-6ae830eb4263b002.js","node_modules/@parcel/runtime-js/lib/runtime-abc8331471ac4af4.js","src/js/createReadPageCardsMarkup.js","src/js/addMarkup.js","node_modules/@parcel/runtime-js/lib/runtime-ef8243ce3dbf1e09.js","src/read.js","src/js/header/currentPage.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"jewIc\\\":\\\"read.1f88deb0.js\\\",\\\"75FnL\\\":\\\"like.8671871f.svg\\\",\\\"7tpI3\\\":\\\"dislike.6673e1b1.svg\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"75FnL\")).toString();","export function createReadPageCardsMarkup() {\n  const dataFromLocalStorage = JSON.parse(localStorage.getItem('cardsInfo'));\n\n  const readItems = dataFromLocalStorage.filter(item => item.isRead === true);\n  return readItems\n    .map(\n      (\n        { isRead, img, title, text, date, category, readMoreLink, isFavorite },\n        index\n      ) => {\n        const favoriteText = isFavorite\n          ? 'Remove from favorite'\n          : 'Add to favorite';\n\n        let imageUrl = '';\n        if (isFavorite) {\n          imageUrl = new URL(\n            '../images/svg/like.svg?as=svg&width=16&height=16',\n            import.meta.url\n          );\n        } else {\n          imageUrl = new URL(\n            '../images/svg/dislike.svg?as=svg&width=16&height=16',\n            import.meta.url\n          );\n        }\n        return `<div class = \"card\">\n          <div class = \"card-img-wrapper\">\n          <span class=\"card__read\">Have read</span>\n          <span class=\"card__btn\">${favoriteText}\n          <img class=\"like\" src=${imageUrl} alt=${favoriteText} width=\"16\" height=\"16\">\n\n          </span>\n          <span class=\"card__category\">${category}</span>\n          <img class=\"card__img\" src=${img} alt=\"\" width=\"350px\" height=\"500px\">\n        </div>\n        <div class=\"card-description\">\n          <h3 class=\"card__title\">${title}</h3>\n          <p class=\"card__text\">${text}</p>\n          <div class=\"card__date-creation\">\n            <span class=\"card__date\">${date}</span>\n            <a class=\"card-read-more\" href=\"${readMoreLink}\" target=\"_blank\" rel=\"noopener noreferrer\">Read more</a>\n          </div>\n        </div>\n\n        </div>`;\n      }\n    )\n    .join('');\n}\n","export function addMarkup(elem, html) {\n  elem.innerHTML = html;\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7tpI3\")).toString();","const readCardContainer = document.querySelector('.card-container');\n\nimport { createReadPageCardsMarkup } from './js/createReadPageCardsMarkup';\nimport { addMarkup } from './js/addMarkup';\nimport { addActiveClassToCurrentPage } from './js/header/currentPage';\naddActiveClassToCurrentPage();\n\naddMarkup(readCardContainer, createReadPageCardsMarkup());\n\nreadCardContainer.addEventListener('click', event => {\n  if (event.target.classList.contains('card__btn')) {\n    const card = event.target.parentNode.parentNode;\n    const cardTitle = card.querySelector('.card__title').textContent;\n\n    let localStorageData = JSON.parse(localStorage.getItem('cardsInfo'));\n\n    const indexOfELemToUpdate = localStorageData.findIndex(\n      card => card.title === cardTitle\n    );\n\n    if (localStorageData[indexOfELemToUpdate].isFavorite === false) {\n      localStorageData[indexOfELemToUpdate].isFavorite = true;\n    } else {\n      localStorageData[indexOfELemToUpdate].isFavorite = false;\n    }\n\n    localStorage.setItem('cardsInfo', JSON.stringify(localStorageData));\n\n    addMarkup(readCardContainer, createReadPageCardsMarkup());\n  }\n});\n","export function addActiveClassToCurrentPage() {\n  let links = document.querySelectorAll('.header__link');\n  let bodyId = document.querySelector('body').id;\n\n  for (let link of links) {\n    if (link.dataset.active == bodyId) {\n      link.classList.add('current');\n    }\n  }\n\n  // const currentUrl = window.location.href;\n  // const menuLinks = document.querySelectorAll('.header__link');\n\n  // menuLinks.forEach(link => {\n  //   const linkUrl = link.href;\n  //   if (currentUrl === linkUrl) {\n  //     link.classList.add('current');\n  //   }\n  // });\n}\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$d4154c2d3d28fdf5$exports","URL","resolve","import","meta","url","toString","$f030c21e0f2c54e9$export$1562a78c1540771d","localStorage","getItem","filter","item","isRead","map","img","title","text","date","category","readMoreLink","isFavorite","index","favoriteText","imageUrl","$62f5a7215ec60f09$exports","join","$7ca4600032a25d38$export$485cc6bdae71a787","elem","html","innerHTML","$56697b3ed36fb081$var$readCardContainer","document","querySelector","links","querySelectorAll","bodyId","link","dataset","active","classList","add","addEventListener","event","target","contains","cardTitle","parentNode","textContent","localStorageData","indexOfELemToUpdate","findIndex","card","setItem","stringify"],"version":3,"file":"read.1f88deb0.js.map"}